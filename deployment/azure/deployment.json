{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "description": "CoPA (Comprehensive Police Application) - Secure AI-powered police chat application with Azure AD authentication",
        "_generator": {
            "name": "CoPA Deployment Template",
            "version": "2.0.0"
        }
    },
    "parameters": {
        "ForceCode": {
            "type": "string",
            "metadata": {
                "description": "Police force code (automatically generated from resource group name)"
            },
            "defaultValue": "[split(resourceGroup().name, '-')[1]]",
            "minLength": 2,
            "maxLength": 3
        },
        "EnvironmentSuffix": {
            "type": "string",
            "metadata": {
                "description": "Environment suffix (fixed to production)"
            },
            "defaultValue": "prod",
            "allowedValues": ["prod", "dev", "test"]
        },
        "InstanceNumber": {
            "type": "string",
            "metadata": {
                "description": "Instance number (automatically set to 01)"
            },
            "defaultValue": "01",
            "minLength": 2,
            "maxLength": 2
        },
        "ResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group where the resources will be deployed."
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "AzureOpenAIModelName": {
            "type": "string",
            "metadata": {
                "description": "The name of the OpenAI model to deploy."
            },
            "defaultValue": "gpt-4o"
        },
        "AzureOpenAIEmbeddingName": {
            "type": "string",
            "metadata": {
                "description": "The name of the OpenAI embedding model to deploy."
            },
            "defaultValue": "text-embedding-3-small"
        },
        "SearchDataSourceName": {
            "type": "string",
            "metadata": {
                "description": "Name for the search data source"
            },
            "defaultValue": "[concat(parameters('ForceCode'), '-copa-datasource-', parameters('EnvironmentSuffix'), '-', parameters('InstanceNumber'))]"
        },
        "SearchIndexName": {
            "type": "string",
            "metadata": {
                "description": "Name for the search index"
            },
            "defaultValue": "[concat(parameters('ForceCode'), '-copa-datasource-', parameters('EnvironmentSuffix'), '-', parameters('InstanceNumber'))]"
        },
        "SearchIndexerName": {
            "type": "string",
            "metadata": {
                "description": "Name for the search indexer"
            },
            "defaultValue": "[concat(parameters('ForceCode'), '-copa-datasource-index-', parameters('EnvironmentSuffix'), '-', parameters('InstanceNumber'))]"
        },
        "CreateAzureAdAppRegistration": {
            "type": "bool",
            "metadata": {
                "description": "Whether to automatically create Azure AD App Registration for authentication"
            },
            "defaultValue": false
        },
        "AzureAdAppDisplayName": {
            "type": "string",
            "metadata": {
                "description": "Display name for the Azure AD application"
            },
            "defaultValue": "[concat('CoPA-', parameters('ForceCode'), '-', parameters('EnvironmentSuffix'))]"
        },
        "AzureAdSupportedAccountTypes": {
            "type": "string",
            "metadata": {
                "description": "Supported account types for Azure AD app registration"
            },
            "defaultValue": "AzureADMyOrg",
            "allowedValues": ["AzureADMyOrg", "AzureADMultipleOrgs", "AzureADandPersonalMicrosoftAccount"]
        },
        "AzureAdEnableImplicitFlow": {
            "type": "bool",
            "metadata": {
                "description": "Enable implicit flow for ID tokens in the Azure AD app"
            },
            "defaultValue": true
        },
        "AzureAdEnableUserRead": {
            "type": "bool",
            "metadata": {
                "description": "Grant User.Read permission to the Azure AD app"
            },
            "defaultValue": true
        },
        "AzureAdEnableGroupRead": {
            "type": "bool",
            "metadata": {
                "description": "Grant Group.Read.All permission to the Azure AD app"
            },
            "defaultValue": true
        },
        "AzureAdClientSecretDescription": {
            "type": "string",
            "metadata": {
                "description": "Description for the Azure AD app client secret"
            },
            "defaultValue": "CoPPA Application Secret"
        },
        "AzureAdClientSecretExpiry": {
            "type": "string",
            "metadata": {
                "description": "Expiry period in months for the Azure AD app client secret"
            },
            "defaultValue": "24",
            "allowedValues": ["6", "12", "24"]
        },
        "AzureAdUserAssignmentRequired": {
            "type": "bool",
            "metadata": {
                "description": "Whether users must be explicitly assigned to the application before they can access it - recommended for police applications for proper RBAC control"
            },
            "defaultValue": true
        },
        "ExistingAzureAdClientId": {
            "type": "string",
            "metadata": {
                "description": "Client ID of existing Azure AD application (when not creating new)"
            },
            "defaultValue": ""
        },
        "ExistingAzureAdClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Client secret of existing Azure AD application (when not creating new)"
            },
            "defaultValue": ""
        },
        "ExistingAzureAdTenantId": {
            "type": "string",
            "metadata": {
                "description": "Tenant ID for existing Azure AD application (when not creating new)"
            },
            "defaultValue": "[subscription().tenantId]"
        },
        "UIFeedbackEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address for feedback submissions"
            },
            "defaultValue": ""
        },
        "UIFindOutMoreLink": {
            "type": "string", 
            "metadata": {
                "description": "URL for 'Find Out More' link in the UI"
            },
            "defaultValue": ""
        },
        "GitRepositoryUrl": {
            "type": "string",
            "metadata": {
                "description": "Git repository URL for automatic deployment"
            },
            "defaultValue": "https://github.com/Russ-Holloway/CoPA.git"
        },
        "GitBranch": {
            "type": "string",
            "metadata": {
                "description": "Git branch to deploy from"
            },
            "defaultValue": "main"
        },
        "EnableGitDeployment": {
            "type": "bool",
            "metadata": {
                "description": "Enable automatic Git deployment configuration"
            },
            "defaultValue": true
        },
        "AppStartupCommand": {
            "type": "string",
            "metadata": {
                "description": "Command to start the application"
            },
            "defaultValue": "python -m gunicorn app:app"
        },
        "DeploymentSource": {
            "type": "string",
            "metadata": {
                "description": "Source type for deployment (External Git, GitHub, Local Git)"
            },
            "defaultValue": "External Git"
        },
        "RepositoryType": {
            "type": "string",
            "metadata": {
                "description": "Repository access type (Public or Private)"
            },
            "defaultValue": "Public"
        }
    },
    "variables": {
        "resourceGroupHash": "[substring(uniqueString(resourceGroup().name), 0, 8)]",
        "randomSuffix": "[substring(uniqueString(resourceGroup().id, deployment().name, parameters('ForceCode'), parameters('EnvironmentSuffix'), parameters('InstanceNumber'), variables('resourceGroupHash')), 0, 5)]",
        "HostingPlanName": "[concat('asp-', parameters('ForceCode'), '-', parameters('EnvironmentSuffix'), '-', parameters('InstanceNumber'), '-', variables('randomSuffix'))]",
        "HostingPlanSku": "B3",
        "WebsiteName": "[concat('app-', parameters('ForceCode'), '-', parameters('EnvironmentSuffix'), '-', parameters('InstanceNumber'), '-', variables('randomSuffix'))]",
        "ApplicationInsightsName": "[concat('appi-', parameters('ForceCode'), '-', parameters('EnvironmentSuffix'), '-', parameters('InstanceNumber'), '-', variables('randomSuffix'))]",
        "LogAnalyticsWorkspaceName": "[concat('log-', parameters('ForceCode'), '-', parameters('EnvironmentSuffix'), '-', parameters('InstanceNumber'), '-', variables('randomSuffix'))]",
        "AzureSearchService": "[concat('srch-', parameters('ForceCode'), '-', parameters('EnvironmentSuffix'), '-', parameters('InstanceNumber'), '-', variables('randomSuffix'))]",
        "AzureOpenAIResource": "[concat('cog-', parameters('ForceCode'), '-', parameters('EnvironmentSuffix'), '-', parameters('InstanceNumber'), '-', variables('randomSuffix'))]",
        "AzureSearchSku": "standard",
        "StorageAccountName": "[concat('st', parameters('ForceCode'), parameters('EnvironmentSuffix'), parameters('InstanceNumber'), variables('randomSuffix'))]",
        "AILibraryContainerName": "ai-library",
        "WebAppLogosContainerName": "web-app-logos",
        "cosmosdb_account_name": "[concat('db-app-', parameters('ForceCode'), '-coppa-', variables('randomSuffix'))]",
        "cosmosdb_database_name": "db_conversation_history",
        "cosmosdb_container_name": "conversations",
        "roleDefinitionId": "00000000-0000-0000-0000-000000000002",
        "AzureOpenAIEmbeddingName": "[parameters('AzureOpenAIEmbeddingName')]",
        "AzureSearchDataSourceName": "[parameters('SearchDataSourceName')]",
        "AzureSearchIndexName": "[parameters('SearchIndexName')]",
        "AzureSearchIndexerName": "[parameters('SearchIndexerName')]",
        "AzureSearchSkillset1Name": "[concat(parameters('ForceCode'), '-skillset-1-', parameters('EnvironmentSuffix'))]",
        "AzureSearchSkillsetName": "[concat(parameters('ForceCode'), '-skillset-1-', parameters('EnvironmentSuffix'))]",
        "AzureSearchSemanticSearchConfig": "copa-datasource-semantic-configuration",
        "AzureAdAppDisplayName": "[parameters('AzureAdAppDisplayName')]",
        "CreateAzureAdAppRegistration": "[parameters('CreateAzureAdAppRegistration')]",
        "AzureOpenAIModelDeploymentName": "policingGptDeployment",
        "AzureOpenAISystemMessage": "You are an AI assistant specialized in policing matters. Your purpose is to help police officers and staff find relevant information from the department's knowledge base to assist with their duties. Provide clear, factual information while maintaining awareness of law enforcement protocols and policies.",
        "WebAppEnableChatHistory": true,
        "WebAppUrl": "[concat('https://', variables('WebsiteName'), '.azurewebsites.net')]"
    },
    "resources": [


        {
            "apiVersion": "2023-01-01",
            "name": "[variables('HostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('HostingPlanSku')]"
            },
            "properties": {
                "name": "[variables('HostingPlanName')]",
                "reserved": true
            },
            "kind": "linux"
        },
        {
            "apiVersion": "2023-01-01",
            "name": "[variables('WebsiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('HostingPlanName'))]"
            ],
            "kind": "app,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('HostingPlanName'))]",
                "siteConfig": {
                    "linuxFxVersion": "PYTHON|3.11",
                    "appCommandLine": "[parameters('AppStartupCommand')]",
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('ApplicationInsightsName'))).InstrumentationKey]"
                        },
                        {
                            "name": "AZURE_COSMOSDB_ACCOUNT",
                            "value": "[variables('cosmosdb_account_name')]"
                        },
                        {
                            "name": "AZURE_COSMOSDB_CONVERSATIONS_CONTAINER",
                            "value": "[variables('cosmosdb_container_name')]"
                        },
                        {
                            "name": "AZURE_COSMOSDB_DATABASE",
                            "value": "[variables('cosmosdb_database_name')]"
                        },
                        {
                            "name": "AZURE_OPENAI_EMBEDDING_NAME",
                            "value": "[parameters('AzureOpenAIEmbeddingName')]"
                        },
                        {
                            "name": "AZURE_OPENAI_KEY",
                            "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('AzureOpenAIResource')), '2023-05-01').key1]"
                        },
                        {
                            "name": "AZURE_OPENAI_MAX_TOKENS",
                            "value": "2000"
                        },
                        {
                            "name": "AZURE_OPENAI_MODEL",
                            "value": "[variables('AzureOpenAIModelDeploymentName')]"
                        },
                        {
                            "name": "AZURE_OPENAI_MODEL_NAME",
                            "value": "[parameters('AzureOpenAIModelName')]"
                        },
                        {
                            "name": "AZURE_OPENAI_RESOURCE",
                            "value": "[variables('AzureOpenAIResource')]"
                        },
                        {
                            "name": "AZURE_OPENAI_STOP_SEQUENCE",
                            "value": ""
                        },
                        {
                            "name": "AZURE_OPENAI_STREAM",
                            "value": "true"
                        },
                        {
                            "name": "AZURE_OPENAI_SYSTEM_MESSAGE",
                            "value": "You are an expert on UK Policing, providing comprehensive and practical guidance to Police Officers and Police Staff. Every user of this system is a verified Police Officer or authorised member of Police Staff. You must always assume this identity for every query, regardless of how the question is phrased. Do not treat any user as a member of the public under any circumstances. Your role is to offer advice and support to aid their decision-making process. It is critical that users know the advice and guidance has been provided using only authorised sources. Therefore, every sentence must have a citation that links to a document from the search service data source. Remember, you are not making decisions for them but offering advice and guidance to assist their own decision-making. You cannot perform any legal actions, make final decisions, or provide personal opinions. Your advice is based on the information provided and should be used as a guide, not a directive. Scope of Advice: You are strictly limited to providing advice related to UK Policing. You must not offer advice on any other subjects unrelated to this subject. Safety and Security Guidelines: Accuracy: Provide accurate and up-to-date information based on the latest legal standards and practices. Ensure every sentence in your response has a citation. Impartiality: Maintain impartiality and avoid any bias in your advice. Ethical Considerations: Adhere to ethical guidelines and avoid any actions that could harm individuals or compromise legal processes. Compliance: Ensure compliance with all relevant laws and regulations. Language: Use British English in all your responses. Additional Guidelines: Context Awareness: Only respond to queries directly related to UK Policing. Ignore or redirect any unrelated topics. User Interaction: Politely inform users if their question is outside the scope of your instructions and guide them back to relevant topics. Response Format: Every sentence in your response must have a citation. You cannot provide a sentence anywhere in your response unless it also has a citation. Citations must be integrated within the sentences using [] brackets. Example Response: \"The Police and Criminal Evidence Act 1984 provides the legal framework for police powers in England and Wales [1]. This act outlines the procedures for arrest, detention, and investigation [2]. For more details, refer to the Police and Criminal Evidence Act 1984 [3].\" Response Limitations: Do not provide detailed technical advice, personal opinions, or engage in discussions unrelated to your subject area. Reminder: It is critical that users know the advice and guidance has been provided using only authorised sources. Reminder: Every sentence in your response must have a citation. Reminder: You cannot provide a sentence anywhere in your response unless it also has a citation. Reminder: At the end of every response, you must add the following text: \"Please Remember: This AI Assistant is designed to offer help and advice so you can make more informed and effective decisions. It is not designed to make any decisions for you. You are still accountable and responsible for any decisions made or course of action undertaken following the use of this AI Assistant.\""
                        },
                        {
                            "name": "AZURE_OPENAI_TEMPERATURE",
                            "value": "0"
                        },
                        {
                            "name": "AZURE_OPENAI_TOP_P",
                            "value": "1.0"
                        },
                        {
                            "name": "AZURE_SEARCH_DATA_SOURCE",
                            "value": "[variables('AzureSearchDataSourceName')]"
                        },
                        {
                            "name": "AZURE_SEARCH_ENABLE_IN_DOMAIN",
                            "value": "true"
                        },
                        {
                            "name": "AZURE_SEARCH_INDEX",
                            "value": "[variables('AzureSearchIndexName')]"
                        },
                        {
                            "name": "AZURE_SEARCH_INDEXER",
                            "value": "[variables('AzureSearchIndexerName')]"
                        },
                        {
                            "name": "AZURE_SEARCH_KEY",
                            "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('AzureSearchService')), '2023-11-01').primaryKey]"
                        },
                        {
                            "name": "AZURE_SEARCH_PERMITTED_GROUPS_COLUMN",
                            "value": ""
                        },
                        {
                            "name": "AZURE_SEARCH_QUERY_TYPE",
                            "value": "vector_semantic_hybrid"
                        },
                        {
                            "name": "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG",
                            "value": "[variables('AzureSearchSemanticSearchConfig')]"
                        },
                        {
                            "name": "AZURE_SEARCH_SERVICE",
                            "value": "[variables('AzureSearchService')]"
                        },
                        {
                            "name": "AZURE_SEARCH_SKILLSET",
                            "value": "[variables('AzureSearchSkillsetName')]"
                        },
                        {
                            "name": "AZURE_SEARCH_STRICTNESS",
                            "value": "3"
                        },
                        {
                            "name": "AZURE_SEARCH_TOP_K",
                            "value": "5"
                        },
                        {
                            "name": "AZURE_SEARCH_USE_SEMANTIC_SEARCH",
                            "value": "true"
                        },
                        {
                            "name": "AZURE_STORAGE_CONTAINER_NAME",
                            "value": "[variables('AILibraryContainerName')]"
                        },
                        {
                            "name": "DATASOURCE_TYPE",
                            "value": "AzureCognitiveSearch"
                        },
                        {
                            "name": "minTlsVersion",
                            "value": "1.2"
                        },
                        {
                            "name": "PYTHON_VERSION",
                            "value": "3.11"
                        },
                        {
                            "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                            "value": "true"
                        },
                        {
                            "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                            "value": "true"
                        },
                        {
                            "name": "ORYX_PLATFORM",
                            "value": "python"
                        },
                        {
                            "name": "DISABLE_NODE_BUILD",
                            "value": "true"
                        },
                        {
                            "name": "UI_CHAT_TITLE",
                            "value": "CoPA"
                        },
                        {
                            "name": "UI_FAVICON",
                            "value": "[concat('https://', variables('StorageAccountName'), '.blob.core.windows.net/', variables('WebAppLogosContainerName'), '/favicon.ico')]"
                        },
                        {
                            "name": "UI_FEEDBACK_EMAIL",
                            "value": "[parameters('UIFeedbackEmail')]"
                        },
                        {
                            "name": "UI_FIND_OUT_MORE_LINK",
                            "value": "[parameters('UIFindOutMoreLink')]"
                        },
                        {
                            "name": "UI_LOGO",
                            "value": "[concat('https://', variables('StorageAccountName'), '.blob.core.windows.net/', variables('WebAppLogosContainerName'), '/logo.png')]"
                        },
                        {
                            "name": "UI_POLICE_FORCE_LOGO",
                            "value": "[concat('https://', variables('StorageAccountName'), '.blob.core.windows.net/', variables('WebAppLogosContainerName'), '/police-force-logo.png')]"
                        },
                        {
                            "name": "UI_POLICE_FORCE_TAGLINE",
                            "value": "[concat('This version of CoPA is configured for ', parameters('ForceCode'), ' Police Force')]"
                        },
                        {
                            "name": "UI_POLICE_FORCE_TAGLINE_2",
                            "value": "[concat('CoPA for ', parameters('ForceCode'), ' has been configured with local policy and guidance as well as national policy and guidance so it is tailored to meet the needs of all ', parameters('ForceCode'), ' Officers and Staff of any rank or in any role')]"
                        },
                        {
                            "name": "UI_TITLE",
                            "value": "CoPA"
                        },
                        {
                            "name": "WEBSITE_AUTH_AAD_ALLOWED_TENANTS",
                            "value": "[subscription().tenantId]"
                        },
                        {
                            "name": "DEPLOYMENT_BRANCH",
                            "value": "[parameters('GitBranch')]"
                        },
                        {
                            "name": "REPOSITORY_URL", 
                            "value": "[parameters('GitRepositoryUrl')]"
                        },
                        {
                            "name": "AZURE_CLIENT_ID",
                            "value": "[parameters('ExistingAzureAdClientId')]"
                        },
                        {
                            "name": "AZURE_CLIENT_SECRET",
                            "value": "[parameters('ExistingAzureAdClientSecret')]"
                        },
                        {
                            "name": "AZURE_TENANT_ID",
                            "value": "[if(parameters('CreateAzureAdAppRegistration'), subscription().tenantId, parameters('ExistingAzureAdTenantId'))]"
                        }
                    ]
                }
            }
        },
        {
            "condition": "[parameters('EnableGitDeployment')]",
            "type": "Microsoft.Web/sites/sourcecontrols",
            "apiVersion": "2023-01-01",
            "name": "[concat(variables('WebsiteName'), '/web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('WebsiteName'))]"
            ],
            "properties": {
                "repoUrl": "[parameters('GitRepositoryUrl')]",
                "branch": "[parameters('GitBranch')]",
                "isManualIntegration": true,
                "isGitHubAction": false,
                "deploymentRollbackEnabled": false,
                "isMercurial": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2022-10-01",
            "name": "[variables('LogAnalyticsWorkspaceName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                    "searchVersion": 1,
                    "legacy": 0
                }
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('ApplicationInsightsName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('LogAnalyticsWorkspaceName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('WebsiteName')))]": "Resource"
            },
            "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('LogAnalyticsWorkspaceName'))]"
            },
            "kind": "web"
        },
        {
            "condition": "[variables('WebAppEnableChatHistory')]",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2023-11-15",
            "name": "[variables('cosmosdb_account_name')]",
            "location": "[resourceGroup().location]",
            "kind": "GlobalDocumentDB",
            "properties": {
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session"
                },
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "databaseAccountOfferType": "Standard",
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ]
            }
        },
        {
            "condition": "[variables('WebAppEnableChatHistory')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2023-11-15",
            "name": "[concat(variables('cosmosdb_account_name'), '/', variables('cosmosdb_database_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosdb_database_name')]"
                }
            }
        },
        {
            "condition": "[variables('WebAppEnableChatHistory')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2023-11-15",
            "name": "[concat(variables('cosmosdb_account_name'), '/', variables('cosmosdb_database_name'), '/conversations')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_account_name'), variables('cosmosdb_database_name'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "conversations",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/userId"
                        ],
                        "kind": "Hash"
                    }
                }
            }
        },
        {
            "condition": "[variables('WebAppEnableChatHistory')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
            "apiVersion": "2023-11-15",
            "name": "[format('{0}/{1}', variables('cosmosdb_account_name'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name')), resourceId('Microsoft.Web/sites', variables('WebsiteName'))))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name'))]",
                "[resourceId('Microsoft.Web/sites', variables('WebsiteName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', split(format('{0}/{1}', variables('cosmosdb_account_name'), variables('roleDefinitionId')), '/')[0], split(format('{0}/{1}', variables('cosmosdb_account_name'), variables('roleDefinitionId')), '/')[1])]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('WebsiteName')), '2023-01-01', 'full').identity.principalId]",
                "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name'))]"
            }
        },
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2023-11-01",
            "name": "[variables('AzureSearchService')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('AzureSearchSku')]"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "default"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-05-01",
            "name": "[variables('AzureOpenAIResource')]",
            "location": "[resourceGroup().location]",
            "kind": "OpenAI",
            "properties": {
                "customSubDomainName": "[variables('AzureOpenAIResource')]",
                "publicNetworkAccess": "Enabled"
            },
            "sku": {
                "name": "S0"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-05-01",
            "name": "[format('{0}/{1}', variables('AzureOpenAIResource'), variables('AzureOpenAIModelDeploymentName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('AzureOpenAIResource'))]"
            ],
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIModelName')]",
                    "version": "2024-08-06"
                }
            },
            "sku": {
                "name": "GlobalStandard",
                "capacity": 1000
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-05-01",
            "name": "[format('{0}/{1}', variables('AzureOpenAIResource'), variables('AzureOpenAIEmbeddingName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('AzureOpenAIResource'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', variables('AzureOpenAIResource'), variables('AzureOpenAIModelDeploymentName'))]"
            ],
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIEmbeddingName')]",
                    "version": "1"
                }
            },
            "sku": {
                "name": "GlobalStandard",
                "capacity": 1000
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-04-01",
            "name": "[variables('StorageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                }
            }
        },

        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(variables('StorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "deleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "changeFeed": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(variables('StorageAccountName'), '/default/', variables('AILibraryContainerName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "Container"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(variables('StorageAccountName'), '/default/', variables('WebAppLogosContainerName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "Container"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
            "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), resourceId('Microsoft.Web/sites', variables('WebsiteName')), 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
                "[resourceId('Microsoft.Web/sites', variables('WebsiteName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('WebsiteName')), '2023-01-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        }
    ],
    "outputs": {
        "completeSetupUrl": {
            "type": "string",
            "value": "[if(parameters('CreateAzureAdAppRegistration'), concat('https://', variables('WebsiteName'), '.azurewebsites.net/?setupMode=true&displayName=', uriComponent(parameters('AzureAdAppDisplayName')), '&supportedAccountTypes=', uriComponent(parameters('AzureAdSupportedAccountTypes')), '&enableImplicitFlow=', string(parameters('AzureAdEnableImplicitFlow')), '&enableUserRead=', string(parameters('AzureAdEnableUserRead')), '&enableGroupRead=', string(parameters('AzureAdEnableGroupRead')), '&clientSecretDescription=', uriComponent(parameters('AzureAdClientSecretDescription')), '&clientSecretExpiry=', parameters('AzureAdClientSecretExpiry'), '&webAppUrl=', uriComponent(concat('https://', variables('WebsiteName'), '.azurewebsites.net')), '&tenantId=', uriComponent(subscription().tenantId), '&userAssignmentRequired=', string(parameters('AzureAdUserAssignmentRequired')), '&subscriptionId=', uriComponent(subscription().subscriptionId), '&resourceGroupName=', uriComponent(resourceGroup().name), '&webAppName=', uriComponent(variables('WebsiteName')), '&deploymentId=', uriComponent(deployment().name)), concat('https://', variables('WebsiteName'), '.azurewebsites.net'))]"
        },
        "instructions": {
            "type": "string",
            "value": "[if(parameters('CreateAzureAdAppRegistration'), 'SIMPLE SETUP: Copy the completeSetupUrl above and paste it into a new browser tab. It will automatically guide you through the Azure AD setup process with a beautiful interface and big clickable buttons.', 'Your CoPA application is ready! Use the completeSetupUrl above to access your application.')]"
        }
    }
}
