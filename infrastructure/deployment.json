{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "HostingPlanName": {
            "type": "string",
            "defaultValue": "[guid(resourceGroup().id)]",
            "metadata": {
                "description": "Name of App Service plan"
            }
        },
        "HostingPlanSku": {
            "type": "string",
            "defaultValue": "B3",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "The pricing tier for the App Service plan"
            }
        },
        "WebsiteName": {
            "type": "string",
            "defaultValue": "[guid(resourceGroup().id)]",
            "metadata": {
                "description": "Name of Web App"
            }
        },
        "ApplicationInsightsName": {
            "type": "string",
            "defaultValue": "[guid(resourceGroup().id)]",
            "metadata": {
                "description": "Name of Application Insights"
            }
        },
        "AzureSearchService": {
            "type": "string",
            "defaultValue": "[format('search-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Name of Azure Search Service"
            }
        },
        "AzureSearchSku": {
            "type": "string",
            "defaultValue": "standard",
            "allowedValues": [
                "free",
                "basic",
                "standard",
                "standard2",
                "standard3"
            ],
            "metadata": {
                "description": "The pricing tier for the Azure Search Service"
            }
        },
        "AzureSearchIndex": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of Azure Search Index"
            }
        },
        "AzureSearchUseSemanticSearch": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Use semantic search"
            }
        },
        "AzureSearchSemanticSearchConfig": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "Semantic search config"
            }
        },
        "AzureSearchIndexIsPrechunked": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Is the index prechunked"
            }
        },
        "AzureSearchTopK": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "Top K results"
            }
        },
        "AzureSearchEnableInDomain": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable in domain"
            }
        },
        "AzureSearchContentColumns": {
            "type": "string",
            "defaultValue": "content",
            "metadata": {
                "description": "Content columns"
            }
        },
        "AzureSearchFilenameColumn": {
            "type": "string",
            "defaultValue": "filename",
            "metadata": {
                "description": "Filename column"
            }
        },
        "AzureSearchTitleColumn": {
            "type": "string",
            "defaultValue": "title",
            "metadata": {
                "description": "Title column"
            }
        },
        "AzureSearchUrlColumn": {
            "type": "string",
            "defaultValue": "url",
            "metadata": {
                "description": "Url column"
            }
        },
        "AzureOpenAIResource": {
            "type": "string",
            "defaultValue": "[format('oai-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Name of Azure OpenAI Resource"
            }
        },
        "AzureOpenAIModel": {
            "type": "string",
            "defaultValue": "unused-parameter",
            "metadata": {
                "description": "Unused Parameter - Deployment Created Automatically"
            }
        },
        "AzureOpenAIModelName": {
            "type": "string",
            "defaultValue": "unused-parameter",
            "metadata": {
                "description": "Unused Parameter - Deployment Created Automatically"
            }
        },
        "AzureOpenAIEmbeddingModelName": {
            "type": "string",
            "defaultValue": "text-embedding-ada-002",
            "metadata": {
                "description": "Azure OpenAI Embedding Model Name"
            }
        },
        "AzureOpenAIEmbeddingName": {
            "type": "string",
            "defaultValue": "embedding",
            "metadata": {
                "description": "Azure OpenAI Embedding Deployment Name"
            }
        },
        "AzureOpenAICapacity": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "description": "Azure OpenAI TPM Capacity"
            }
        },
        "AzureOpenAISku": {
            "type": "string",
            "defaultValue": "S0",
            "metadata": {
                "description": "Azure OpenAI SKU"
            }
        },
        "AzureOpenAITemperature": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Azure OpenAI Temperature"
            }
        },
        "AzureOpenAITopP": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Azure OpenAI Top P"
            }
        },
        "AzureOpenAIMaxTokens": {
            "type": "int",
            "defaultValue": 1000,
            "metadata": {
                "description": "Azure OpenAI Max Tokens"
            }
        },
        "AzureOpenAIStopSequence": {
            "type": "string",
            "defaultValue": "\n",
            "metadata": {
                "description": "Azure OpenAI Stop Sequence"
            }
        },
        "AzureOpenAISystemMessage": {
            "type": "string",
            "defaultValue": "You are an AI assistant specialized in policing matters. Your purpose is to help police officers and staff find relevant information from the department's knowledge base to assist with their duties. Provide clear, factual information while maintaining awareness of law enforcement protocols and policies.",
            "metadata": {
                "description": "Azure OpenAI System Message"
            }
        },
        "AzureOpenAIStream": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Whether or not to stream responses from Azure OpenAI"
            }
        },
        "AzureSearchQueryType": {
            "type": "string",
            "defaultValue": "simple",
            "allowedValues": [
                "simple",
                "semantic",
                "vector",
                "vectorSimpleHybrid",
                "vectorSemanticHybrid"
            ],
            "metadata": {
                "description": "Azure Search Query Type"
            }
        },
        "AzureSearchVectorFields": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Search Vector Fields"
            }
        },
        "AzureSearchPermittedGroupsField": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Search Permitted Groups Field"
            }
        },
        "AzureSearchStrictness": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [
                1,
                2,
                3,
                4,
                5
            ],
            "metadata": {
                "description": "Azure Search Strictness"
            }
        },
        "WebAppEnableChatHistory": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable chat history by deploying a Cosmos DB instance"
            }
        },
        "GitRepoUrl": {
            "type": "string",
            "defaultValue": "https://github.com/Russ-Holloway/Policing-Assistant",
            "metadata": {
                "description": "GitHub repository URL containing the application code"
            }
        },
        "GitBranch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "GitHub branch to deploy"
            }
        },
        "AzureSearchDataSourceName": {
            "type": "string",
            "defaultValue": "policingdata",
            "metadata": {
                "description": "Name of the data source for Azure Search"
            }
        },
        "AzureSearchIndexName": {
            "type": "string",
            "defaultValue": "policingindex",
            "metadata": {
                "description": "Name of the index for Azure Search"
            }
        },
        "AzureSearchIndexerName": {
            "type": "string",
            "defaultValue": "policingindexer",
            "metadata": {
                "description": "Name of the indexer for Azure Search"
            }
        },
        "AzureSearchSkillset1Name": {
            "type": "string",
            "defaultValue": "policing-text-skillset",
            "metadata": {
                "description": "Name of the first skillset for Azure Search"
            }
        },
        "AzureSearchSkillset2Name": {
            "type": "string",
            "defaultValue": "policing-enrichment-skillset",
            "metadata": {
                "description": "Name of the second skillset for Azure Search"
            }
        },
        "StorageAccountName": {
            "type": "string",
            "defaultValue": "policing[uniqueString(subscription().subscriptionId)]",
            "maxLength": 24,
            "metadata": {
                "description": "Name of the storage account for data source"
            }
        },
        "StorageContainerName": {
            "type": "string",
            "defaultValue": "docs",
            "metadata": {
                "description": "Name of the blob container for data source"
            }
        }
    },
    "variables": {
        "cosmosdb_account_name": "[format('db-{0}', parameters('WebsiteName'))]",
        "cosmosdb_database_name": "db_conversation_history",
        "cosmosdb_container_name": "conversations",
        "roleDefinitionId": "00000000-0000-0000-0000-000000000002",
        "roleAssignmentId": "[guid(variables('roleDefinitionId'), parameters('WebsiteName'), resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name')))]",
        "storageRoleAssignmentId": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), parameters('WebsiteName'), 'StorageBlobDataContributor')]",
        "deploymentScriptUri": "https://raw.githubusercontent.com/Russ-Holloway/Policing-Assistant/main/scripts/setup_search_components.ps1",
        "deployScriptIdentityName": "deployScriptIdentity"
    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "name": "[parameters('HostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('HostingPlanSku')]"
            },
            "properties": {
                "name": "[parameters('HostingPlanName')]",
                "reserved": true
            },
            "kind": "linux"
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[parameters('WebsiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('HostingPlanName'))]",
                "[resourceId('Microsoft.Search/searchServices', parameters('AzureSearchService'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource'))]",
                "openaiModelDeployment",
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('AzureOpenAIResource'), parameters('AzureOpenAIEmbeddingName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[parameters('HostingPlanName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "AZURE_SEARCH_SERVICE",
                            "value": "[parameters('AzureSearchService')]"
                        },
                        {
                            "name": "AZURE_SEARCH_INDEX",
                            "value": "[parameters('AzureSearchIndexName')]"
                        },
                        {
                            "name": "AZURE_SEARCH_KEY",
                            "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('AzureSearchService')), '2020-08-01').primaryKey]"
                        },
                        {
                            "name": "AZURE_SEARCH_USE_SEMANTIC_SEARCH",
                            "value": "[parameters('AzureSearchUseSemanticSearch')]"
                        },
                        {
                            "name": "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG",
                            "value": "[parameters('AzureSearchSemanticSearchConfig')]"
                        },
                        {
                            "name": "AZURE_SEARCH_INDEX_IS_PRECHUNKED",
                            "value": "[parameters('AzureSearchIndexIsPrechunked')]"
                        },
                        {
                            "name": "AZURE_SEARCH_TOP_K",
                            "value": "[parameters('AzureSearchTopK')]"
                        },
                        {
                            "name": "AZURE_SEARCH_ENABLE_IN_DOMAIN",
                            "value": "[parameters('AzureSearchEnableInDomain')]"
                        },
                        {
                            "name": "AZURE_SEARCH_CONTENT_COLUMNS",
                            "value": "[parameters('AzureSearchContentColumns')]"
                        },
                        {
                            "name": "AZURE_SEARCH_FILENAME_COLUMN",
                            "value": "[parameters('AzureSearchFilenameColumn')]"
                        },
                        {
                            "name": "AZURE_SEARCH_TITLE_COLUMN",
                            "value": "[parameters('AzureSearchTitleColumn')]"
                        },
                        {
                            "name": "AZURE_SEARCH_URL_COLUMN",
                            "value": "[parameters('AzureSearchUrlColumn')]"
                        },
                        {
                            "name": "AZURE_OPENAI_RESOURCE",
                            "value": "[parameters('AzureOpenAIResource')]"
                        },
                        {
                            "name": "AZURE_OPENAI_MODEL",
                            "value": "policingGptDeployment"
                        },
                        {
                            "name": "AZURE_OPENAI_KEY",
                            "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource')), '2021-10-01').key1]"
                        },
                        {
                            "name": "AZURE_OPENAI_MODEL_NAME",
                            "value": "gpt-4o"
                        },
                        {
                            "name": "AZURE_OPENAI_TEMPERATURE",
                            "value": "[parameters('AzureOpenAITemperature')]"
                        },
                        {
                            "name": "AZURE_OPENAI_TOP_P",
                            "value": "[parameters('AzureOpenAITopP')]"
                        },
                        {
                            "name": "AZURE_OPENAI_MAX_TOKENS",
                            "value": "[parameters('AzureOpenAIMaxTokens')]"
                        },
                        {
                            "name": "AZURE_OPENAI_STOP_SEQUENCE",
                            "value": "[parameters('AzureOpenAIStopSequence')]"
                        },
                        {
                            "name": "AZURE_OPENAI_SYSTEM_MESSAGE",
                            "value": "[parameters('AzureOpenAISystemMessage')]"
                        },
                        {
                            "name": "AZURE_OPENAI_STREAM",
                            "value": "[parameters('AzureOpenAIStream')]"
                        },
                        {
                            "name": "AZURE_SEARCH_QUERY_TYPE",
                            "value": "[parameters('AzureSearchQueryType')]"
                        },
                        {
                            "name": "AZURE_SEARCH_VECTOR_COLUMNS",
                            "value": "[parameters('AzureSearchVectorFields')]"
                        },
                        {
                            "name": "AZURE_SEARCH_PERMITTED_GROUPS_COLUMN",
                            "value": "[parameters('AzureSearchPermittedGroupsField')]"
                        },
                        {
                            "name": "AZURE_SEARCH_STRICTNESS",
                            "value": "[parameters('AzureSearchStrictness')]"
                        },
                        {
                            "name": "AZURE_OPENAI_EMBEDDING_NAME",
                            "value": "[parameters('AzureOpenAIEmbeddingName')]"
                        },
                        {
                            "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                            "value": "true"
                        },
                        {
                            "name": "AZURE_COSMOSDB_ACCOUNT",
                            "value": "[if(parameters('WebAppEnableChatHistory'), variables('cosmosdb_account_name'), '')]"
                        },
                        {
                            "name": "AZURE_COSMOSDB_DATABASE",
                            "value": "[variables('cosmosdb_database_name')]"
                        },
                        {
                            "name": "AZURE_COSMOSDB_CONVERSATIONS_CONTAINER",
                            "value": "[variables('cosmosdb_container_name')]"
                        },
                        {
                            "name": "SETUP_STORAGE_ACCOUNT_NAME",
                            "value": "[parameters('StorageAccountName')]"
                        },
                        {
                            "name": "SETUP_STORAGE_ACCOUNT_KEY",
                            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', 'policingstorage'), '2021-04-01').keys[0].value]"
                        },
                        {
                            "name": "AZURE_SEARCH_DATA_SOURCE_NAME",
                            "value": "[parameters('AzureSearchDataSourceName')]"
                        },
                        {
                            "name": "AZURE_SEARCH_INDEX_NAME",
                            "value": "[parameters('AzureSearchIndexName')]"
                        },
                        {
                            "name": "AZURE_SEARCH_INDEXER_NAME",
                            "value": "[parameters('AzureSearchIndexerName')]"
                        },
                        {
                            "name": "AZURE_SEARCH_SKILLSET1_NAME",
                            "value": "[parameters('AzureSearchSkillset1Name')]"
                        },
                        {
                            "name": "AZURE_SEARCH_SKILLSET2_NAME",
                            "value": "[parameters('AzureSearchSkillset2Name')]"
                        },
                        {
                            "name": "AZURE_STORAGE_CONTAINER_NAME",
                            "value": "[parameters('StorageContainerName')]"
                        },
                        {
                            "name": "UWSGI_PROCESSES",
                            "value": "2"
                        },
                        {
                            "name": "UWSGI_THREADS",
                            "value": "2"
                        },
                        {
                            "name": "PYTHON_VERSION",
                            "value": "3.11"
                        }                        
                    ],
                    "pythonVersion": "3.11",
                    "linuxFxVersion": "PYTHON|3.11"
                }
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "2020-06-01",
                    "name": "web",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('WebsiteName'))]"
                    ],
                    "properties": {
                        "repoUrl": "[parameters('GitRepoUrl')]",
                        "branch": "[parameters('GitBranch')]",
                        "isManualIntegration": true
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('ApplicationInsightsName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', parameters('ApplicationInsightsName')))]": "Resource"
            },
            "properties": {
                "Application_Type": "web"
            },
            "kind": "web"
        },
        {
            "condition": "[parameters('WebAppEnableChatHistory')]",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2021-01-15",
            "name": "[variables('cosmosdb_account_name')]",
            "location": "[resourceGroup().location]",
            "kind": "GlobalDocumentDB",
            "properties": {
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session"
                },
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "databaseAccountOfferType": "Standard",
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ]
            }
        },
        {
            "condition": "[parameters('WebAppEnableChatHistory')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2021-01-15",
            "name": "[concat(variables('cosmosdb_account_name'), '/', variables('cosmosdb_database_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosdb_database_name')]"
                }
            }
        },
        {
            "condition": "[parameters('WebAppEnableChatHistory')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2021-01-15",
            "name": "[concat(variables('cosmosdb_account_name'), '/', variables('cosmosdb_database_name'), '/conversations')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_account_name'), variables('cosmosdb_database_name'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "conversations",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/userId"
                        ],
                        "kind": "Hash"
                    }
                }
            }
        },
        {
            "condition": "[parameters('WebAppEnableChatHistory')]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
            "apiVersion": "2021-04-15",
            "name": "[format('{0}/{1}', variables('cosmosdb_account_name'), variables('roleAssignmentId'))]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', split(format('{0}/{1}', variables('cosmosdb_account_name'), variables('roleDefinitionId')), '/')[0], split(format('{0}/{1}', variables('cosmosdb_account_name'), variables('roleDefinitionId')), '/')[1])]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('WebsiteName')), '2021-02-01', 'Full').identity.principalId]",
                "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name'))]"
            ]
        },
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2020-08-01",
            "name": "[parameters('AzureSearchService')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('AzureSearchSku')]"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "default"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2021-10-01",
            "name": "[parameters('AzureOpenAIResource')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('AzureOpenAISku')]"
            },
            "kind": "OpenAI",
            "properties": {
                "customSubDomainName": "[parameters('AzureOpenAIResource')]",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "openaiModelDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.CognitiveServices/accounts/deployments",
                            "apiVersion": "2021-10-01",
                            "name": "[format('{0}/policingGptDeployment', parameters('AzureOpenAIResource'))]",
                            "properties": {
                                "model": {
                                    "format": "OpenAI",
                                    "name": "gpt-4o",
                                    "version": "2024-05-01"
                                },
                                "raiPolicyName": "Microsoft.Default",
                                "scaleSettings": {
                                    "scaleType": "Standard",
                                    "capacity": "[parameters('AzureOpenAICapacity')]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2021-10-01",
            "name": "[format('{0}/{1}', parameters('AzureOpenAIResource'), parameters('AzureOpenAIEmbeddingName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource'))]"
            ],
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIEmbeddingModelName')]",
                    "version": "2"
                },
                "scaleSettings": {
                    "scaleType": "Standard",
                    "capacity": "[parameters('AzureOpenAICapacity')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "policingstorage",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('StorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "policingstorage/default/docs",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "storageRoleAssignment",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('WebsiteName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[concat(parameters('StorageAccountName'), '/Microsoft.Authorization/', variables('storageRoleAssignmentId'))]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('WebsiteName')), '2021-02-01', 'Full').identity.principalId]",
                                "principalType": "ServicePrincipal"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "managedIdentityDeployment",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "apiVersion": "2018-11-30",
                            "name": "[variables('deployScriptIdentityName')]",
                            "location": "[resourceGroup().location]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "setupSearchComponents",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', parameters('AzureSearchService'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('AzureOpenAIResource'), parameters('AzureOpenAIEmbeddingName'))]",
                "openaiModelDeployment",
                "managedIdentityDeployment"
            ],
            "kind": "AzurePowerShell",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('deployScriptIdentityName'))]": {}
                }
            },
            "properties": {
                "azPowerShellVersion": "6.4",
                "timeout": "PT30M",
                "arguments": "[concat('-searchServiceName \"', parameters('AzureSearchService'), '\" -searchServiceKey \"', listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('AzureSearchService')), '2020-08-01').primaryKey, '\" -dataSourceName \"', parameters('AzureSearchDataSourceName'), '\" -indexName \"', parameters('AzureSearchIndexName'), '\" -indexerName \"', parameters('AzureSearchIndexerName'), '\" -skillset1Name \"', parameters('AzureSearchSkillset1Name'), '\" -skillset2Name \"', parameters('AzureSearchSkillset2Name'), '\" -storageAccountName \"', parameters('StorageAccountName'), '\" -storageAccountKey \"', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2021-04-01').keys[0].value, '\" -storageContainerName \"', parameters('StorageContainerName'), '\" -openAIEndpoint \"', reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource'))).endpoint, '\" -openAIKey \"', listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource')), '2021-10-01').key1, '\" -openAIEmbeddingDeployment \"', parameters('AzureOpenAIEmbeddingName'), '\"')]",
                "primaryScriptUri": "[variables('deploymentScriptUri')]",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        }
    ]
}
