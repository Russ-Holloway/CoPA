.questionInputContainer {
  display: flex;
  flex-direction: column;
  height: auto;
  min-height: 120px;
  position: relative;
  margin: 0 auto;
  background: #ffffff;
  border-radius: 12px;
  border: 1px solid #e2e8f0;
  overflow: hidden;
  width: 90%;
  max-width: 480px;
  transition: all 0.2s ease;
}

/* Dark mode styling for question input container */
:global(.dark-mode) .questionInputContainer {
  background: #4a5568;
  border-color: #6b7280;
}

/* Speech-to-text toggle container */
.speechToggleContainer {
  padding: 20px 20px 12px 20px;
  align-items: center;
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  margin-bottom: 8px;
}

/* Dark mode styling for speech toggle container */
:global(.dark-mode) .speechToggleContainer {
  border-bottom-color: rgba(255, 255, 255, 0.1);
}

.speechToggle {
  margin: 0;
}

/* Dark mode styling for speech toggle label - comprehensive approach */
:global(.dark-mode) .speechToggle label,
:global(.dark-mode) .speechToggle .ms-Toggle-label,
:global(.dark-mode) .speechToggle .ms-Label,
:global(.dark-mode) .speechToggle span {
  color: #ffffff !important;
}

/* Additional FluentUI specific selectors */
:global(.dark-mode) .speechToggle .ms-Toggle-field label,
:global(.dark-mode) .speechToggle .ms-Toggle-field span {
  color: #ffffff !important;
}

/* Main container for text input and send button */
.questionInputMainContainer {
  position: relative;
  flex: 1;
}

.questionInputTextArea {
  width: calc(100% - 24px);
  min-height: calc(100% - 24px);
  margin: 12px;
  padding: 16px;
  border: none;
  border-radius: 8px;
  font-size: 16px;
  line-height: 1.5;
  resize: vertical;
  transition: all 0.2s ease;
  background: transparent;
  color: var(--text-primary);
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

/* Dark mode styling for question input text area */
:global(.dark-mode) .questionInputTextArea {
  background: transparent;
  color: #ffffff;
}

.questionInputTextArea::placeholder,
.questionInputTextArea .ms-TextField-field::placeholder {
  color: var(--text-muted);
  opacity: 1;
}

:global(.dark-mode) .questionInputTextArea::placeholder,
:global(.dark-mode) .questionInputTextArea .ms-TextField-field::placeholder,
:global(.dark-mode) .questionInputTextArea textarea::placeholder,
:global(.dark-mode) .questionInputTextArea textarea::-webkit-input-placeholder,
:global(.dark-mode) .questionInputTextArea textarea::-moz-placeholder,
:global(.dark-mode) .questionInputTextArea textarea:-ms-input-placeholder {
  color: #ffffff !important;
  opacity: 0.7 !important;
}

/* Force FluentUI TextField to respect our width */
.questionInputTextArea :global(.ms-TextField-wrapper),
.questionInputTextArea :global(.ms-TextField-fieldGroup),
.questionInputTextArea :global(.ms-TextField-field) {
  width: 100% !important;
  max-width: 100% !important;
}

.questionInputTextArea:focus {
  outline: none;
}

/* Dark mode focus styling */
:global(.dark-mode) .questionInputTextArea:focus {
  outline: none;
}

.questionInputSendButtonContainer {
  position: absolute;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);
}

.questionInputSendButton {
  width: 40px;
  height: 40px;
  border-radius: 8px;
  background: #6366f1;
  color: #ffffff;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.questionInputSendButton:hover {
  transform: translateY(-1px);
  background: #5855eb;
}

.questionInputSendButton:focus {
  outline: 2px solid #6366f1;
  outline-offset: 2px;
}

.questionInputSendButton:active {
  transform: translateY(1px);
}

.questionInputSendButtonDisabled {
  width: 56px;
  height: 56px;
  border-radius: 10px;
  background: #e5e7eb;
  border: 2px solid #d1d5db;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: not-allowed;
  color: var(--text-muted);
  transition: all 0.2s ease;
}

.questionInputSendButtonContainer {
  position: absolute;
  right: 16px;
  bottom: 16px;
}

.questionInputBottomBorder {
  position: absolute;
  width: 100%;
  height: 4px;
  left: 0%;
  bottom: 0%;
  background: #1a1761;
  border-bottom-left-radius: 16px;
  border-bottom-right-radius: 16px;
}

.questionInputOptionsButton {
  cursor: pointer;
  width: 32px;
  height: 32px;
  border-radius: 8px;
  background: rgba(26, 23, 97, 0.1);
  border: 1px solid rgba(26, 23, 97, 0.2);
  transition: all 0.3s ease;
}

.questionInputOptionsButton:hover {
  background: rgba(26, 23, 97, 0.2);
  transform: scale(1.05);
}

.errorMessage {
  position: absolute;
  top: calc(100% + 8px);
  left: 20px;
  right: 20px;
  color: #dc2626;
  font-size: 14px;
  font-weight: 500;
  padding: 8px 12px;
  background: #fef2f2;
  border: 1px solid #fecaca;
  border-radius: 8px;
  z-index: 10;
}

.srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@media (max-width: 768px) {
  .questionInputContainer {
    min-height: 100px;
    max-width: 95%;
    margin: 0 auto;
  }

  .questionInputTextArea {
    font-size: 16px;
    padding: 14px;
    margin: 10px;
    width: calc(100% - 20px);
    min-height: calc(100% - 20px);
  }

  .questionInputSendButton {
    width: 36px;
    height: 36px;
  }

  .questionInputSendButtonContainer {
    right: 14px;
    bottom: 14px;
  }
}

@media (max-width: 480px) {
  .questionInputContainer {
    margin: 0 auto;
    min-height: 90px;
    width: 95%;
    max-width: 95%;
  }

  .questionInputTextArea {
    font-size: 16px;
    line-height: 1.4;
    min-height: 60px;
    padding: 12px;
    width: calc(100% - 24px);
    margin: 12px;
  }

  .questionInputSendButton,
  .questionInputSendButtonDisabled {
    width: 44px;
    height: 44px;
    border-radius: 8px;
  }

  .questionInputSendButtonContainer {
    right: 16px;
    bottom: 12px;
  }
}
