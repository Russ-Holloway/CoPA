{
  "name": "coppa-dev-helper-mcp-server",
  "version": "1.0.0",
  "description": "MCP Server for CoPPA feature development - React/TypeScript frontend and Python Flask backend assistance",
  "type": "module",
  "main": "build/index.js",
  "scripts": {
    "build": "tsc",
    "start": "node build/index.js",
    "dev": "tsx src/index.ts",
    "clean": "rm -rf build/",
    "rebuild": "npm run clean && npm run build",
    "service:start": "nohup npm start > mcp-server.log 2>&1 & echo $! > mcp-server.pid",
    "service:stop": "if [ -f mcp-server.pid ]; then kill $(cat mcp-server.pid) && rm mcp-server.pid; fi",
    "service:status": "if [ -f mcp-server.pid ] && kill -0 $(cat mcp-server.pid) 2>/dev/null; then echo 'MCP Server is running (PID: '$(cat mcp-server.pid)')'; else echo 'MCP Server is not running'; fi",
    "service:restart": "npm run service:stop && sleep 2 && npm run service:start",
    "logs": "tail -f mcp-server.log",
    "quick-test": "echo 'check_accessibility_compliance {\"componentType\": \"button\", \"wcagLevel\": \"AA\"}' | timeout 5s npm start"
  },
  "keywords": ["mcp", "coppa", "react", "typescript", "flask", "python", "feature-development"],
  "author": "CoPPA Development Team",
  "license": "MIT",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.4.0",
    "typescript": "^5.0.0",
    "ast-types": "^0.16.1",
    "recast": "^0.23.4"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "tsx": "^4.0.0"
  }
}
